syntax="proto3";
package communication_raft;
service NodeCommunication
{
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
    rpc RequestVote(VoteRequest) returns (VoteResponse);
}
service ClientCommunication
{
    rpc ServeClient (ServeClientArgs) returns (ServeClientReply);
}
// Node-Node Communication
message entry
{
    string operation=1;
    string key=2;
    string value=3;
    int32 term=4;
    int32 index=5;
}
message AppendEntriesRequest
{
    int32 term=1;
    string leaderAddress =2;
    int32 prevLogIndex=3;
    int32 prevLogTerm = 4;
    repeated entry entries = 5;
    int32 leaderCommit=6;
}
message AppendEntriesResponse
{
    int32 term=1;
    bool success=2;
    string nodeAddress=3;
}
message VoteRequest
{
    int32 term=1;
    string candidateAddress=2;
    int32 lastLogIndex=3;
    int32 lastLogTerm = 4;
}
message VoteResponse
{
    string nodeAddress=1;
    int32 term=2;
    bool voteGranted=3;
}
//Node-Client Communication 
message ServeClientArgs {
  string Request = 1;
}
message ServeClientReply {
  string Data = 1;
  string LeaderID = 2;
  bool Success = 3;
}