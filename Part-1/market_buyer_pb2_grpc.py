# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import market_buyer_pb2 as market__buyer__pb2


class MarketPlaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchItem = channel.unary_stream(
                '/market_communication_with_client.MarketPlace/SearchItem',
                request_serializer=market__buyer__pb2.SearchRequest.SerializeToString,
                response_deserializer=market__buyer__pb2.ItemInfo.FromString,
                )
        self.BuyItem = channel.unary_unary(
                '/market_communication_with_client.MarketPlace/BuyItem',
                request_serializer=market__buyer__pb2.BuyRequest.SerializeToString,
                response_deserializer=market__buyer__pb2.StatusResponse.FromString,
                )
        self.AddWish = channel.unary_unary(
                '/market_communication_with_client.MarketPlace/AddWish',
                request_serializer=market__buyer__pb2.WishRequest.SerializeToString,
                response_deserializer=market__buyer__pb2.StatusResponse.FromString,
                )
        self.RateItem = channel.unary_unary(
                '/market_communication_with_client.MarketPlace/RateItem',
                request_serializer=market__buyer__pb2.RateRequest.SerializeToString,
                response_deserializer=market__buyer__pb2.StatusResponse.FromString,
                )


class MarketPlaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SearchItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddWish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketPlaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchItem': grpc.unary_stream_rpc_method_handler(
                    servicer.SearchItem,
                    request_deserializer=market__buyer__pb2.SearchRequest.FromString,
                    response_serializer=market__buyer__pb2.ItemInfo.SerializeToString,
            ),
            'BuyItem': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyItem,
                    request_deserializer=market__buyer__pb2.BuyRequest.FromString,
                    response_serializer=market__buyer__pb2.StatusResponse.SerializeToString,
            ),
            'AddWish': grpc.unary_unary_rpc_method_handler(
                    servicer.AddWish,
                    request_deserializer=market__buyer__pb2.WishRequest.FromString,
                    response_serializer=market__buyer__pb2.StatusResponse.SerializeToString,
            ),
            'RateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.RateItem,
                    request_deserializer=market__buyer__pb2.RateRequest.FromString,
                    response_serializer=market__buyer__pb2.StatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'market_communication_with_client.MarketPlace', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MarketPlace(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SearchItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/market_communication_with_client.MarketPlace/SearchItem',
            market__buyer__pb2.SearchRequest.SerializeToString,
            market__buyer__pb2.ItemInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market_communication_with_client.MarketPlace/BuyItem',
            market__buyer__pb2.BuyRequest.SerializeToString,
            market__buyer__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddWish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market_communication_with_client.MarketPlace/AddWish',
            market__buyer__pb2.WishRequest.SerializeToString,
            market__buyer__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market_communication_with_client.MarketPlace/RateItem',
            market__buyer__pb2.RateRequest.SerializeToString,
            market__buyer__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
