syntax="proto3";
package market_communication_with_seller;
service MarketPlace
{
    rpc RegisterSeller(RegisterSellerRequest) returns (StatusResponse);

    rpc SellItem(SellItemRequest) returns (StatusResponse);

    rpc UpdateItem(UpdateItemRequest) returns (StatusResponse);

    rpc DeleteItem(DeleteItemRequest) returns (StatusResponse);
    
    rpc DisplaySellerItems(ProductDisplayRequest) returns (stream ItemResponse);
}
message Address
{
    string ipAddress=1;
    uint32 portNumber=2;
}
message RegisterSellerRequest
{
     Address ip = 1;
}
enum Category
{
    ELECTRONICS=0;
    FASHION=1;
    OTHERS=2;
}
message SellItemRequest
{
    string productName = 1;  
    Category productCategory = 2;
    uint32 quantity = 3;
    string description=4;
    float pricePerUnit = 5;
    Address address = 6;
    string uuid=7;
}
message UpdateItemRequest
{
    uint64 id=1;
    float newPrice=2;
    uint32 newQuantity=3;
    Address address = 4;
    string uuid=5;
}
message DeleteItemRequest
{
    uint64 id=1;
    Address address=2;
    string uuid=3;
}
message ProductDisplayRequest
{
    Address address = 1;
    string uuid = 2;
}
message ProductDisplayResponse
{
    uint64 id = 1;
    float price = 2;
    string name = 3;
    Category productCategory=4;
    uint32 quantityRemaining=5;
    Address address = 6;
    float rating = 7;
}
message ItemResponse
{
    repeated ProductDisplayResponse products=1;
}
message StatusResponse
{
    string status=1;
}